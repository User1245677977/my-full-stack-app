{"ast":null,"code":"var _jsxFileName = \"/Users/laviniaguseth/Documents/my-full-stack-app/my-full-stack-app/client/src/transfer.js\",\n  _s = $RefreshSig$();\n// Import statements should be at the top\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { UserContext } from './context';\n\n// Set the API URL based on environment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.NODE_ENV === 'production' ? 'https://your-app-name.herokuapp.com' : 'http://localhost:5000';\nfunction Transfer() {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const [recipientId, setRecipientId] = useState('');\n  const [amount, setAmount] = useState('');\n  const [message, setMessage] = useState('');\n  const handleTransfer = async () => {\n    try {\n      const response = await axios.post(`${apiUrl}/api/transfer`, {\n        senderId: currentUser._id,\n        // Accessing currentUser from context\n        recipientId,\n        amount: parseFloat(amount)\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Transfer failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: \"Transfer Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Recipient ID\",\n        value: recipientId,\n        onChange: e => setRecipientId(e.target.value),\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTransfer,\n        className: \"btn btn-primary mt-3\",\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info mt-3\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Transfer, \"5zQc3GzHUO8tLFwVFgAjDEJdEc4=\");\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useState","useContext","axios","UserContext","jsxDEV","_jsxDEV","apiUrl","process","env","NODE_ENV","Transfer","_s","currentUser","recipientId","setRecipientId","amount","setAmount","message","setMessage","handleTransfer","response","post","senderId","_id","parseFloat","data","error","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/laviniaguseth/Documents/my-full-stack-app/my-full-stack-app/client/src/transfer.js"],"sourcesContent":["// Import statements should be at the top\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { UserContext } from './context';\n\n// Set the API URL based on environment\nconst apiUrl = process.env.NODE_ENV === 'production'\n  ? 'https://your-app-name.herokuapp.com'\n  : 'http://localhost:5000';\n\nfunction Transfer() {\n    const { currentUser } = useContext(UserContext);\n    const [recipientId, setRecipientId] = useState('');\n    const [amount, setAmount] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleTransfer = async () => {\n        try {\n            const response = await axios.post(`${apiUrl}/api/transfer`, {\n                senderId: currentUser._id, // Accessing currentUser from context\n                recipientId,\n                amount: parseFloat(amount),\n            });\n            setMessage(response.data.message);\n        } catch (error) {\n            setMessage(error.response?.data?.error || 'Transfer failed');\n        }\n    };\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Transfer Money</h5>\n                <input\n                    type=\"text\"\n                    placeholder=\"Recipient ID\"\n                    value={recipientId}\n                    onChange={(e) => setRecipientId(e.target.value)}\n                    className=\"form-control\"\n                />\n                <input\n                    type=\"number\"\n                    placeholder=\"Amount\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    className=\"form-control\"\n                />\n                <button onClick={handleTransfer} className=\"btn btn-primary mt-3\">\n                    Transfer\n                </button>\n                {message && <div className=\"alert alert-info mt-3\">{message}</div>}\n            </div>\n        </div>\n    );\n}\n\nexport default Transfer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}