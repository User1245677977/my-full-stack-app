{"ast":null,"code":"var _jsxFileName = \"/Users/laviniaguseth/Documents/my-full-stack-app/my-full-stack-app/client/src/checkdeposit.js\",\n  _s = $RefreshSig$();\n// Import statements should be at the top\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { UserContext } from \"./context\";\n\n// Set the API URL based on environment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.NODE_ENV === 'production' ? 'https://your-app-name.herokuapp.com' : 'http://localhost:5000';\n\n// Client-side CheckDeposit component\nfunction CheckDeposit() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [status, setStatus] = useState('');\n  const [transactionType, setTransactionType] = useState('deposit');\n  const ctx = useContext(UserContext);\n  const user = ctx.users[0];\n  function validate(field, label) {\n    if (!field) {\n      setStatus(`Error: ${label}`);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n    return true;\n  }\n  function checkAccountLimits(amount) {\n    const accountType = user.accountType; // Assuming accountType is stored in user context\n\n    if (transactionType === 'withdraw') {\n      if (amount > user.balance) {\n        setStatus('Error: Insufficient funds');\n        return false;\n      }\n      if (accountType === 'savings' && amount > 1000) {\n        setStatus('Error: Savings account withdrawal limit is $1000');\n        return false;\n      }\n      if (accountType === 'business' && amount > 5000) {\n        setStatus('Error: Business account withdrawal limit is $5000');\n        return false;\n      }\n    } else if (transactionType === 'deposit') {\n      if (accountType === 'savings' && amount < 100) {\n        setStatus('Error: Minimum deposit for savings account is $100');\n        return false;\n      }\n    }\n    return true;\n  }\n  async function handleTransaction() {\n    if (!validate(amount, 'amount')) return;\n    const numAmount = parseFloat(amount);\n    if (isNaN(numAmount)) {\n      setStatus('Error: Enter a valid number');\n      setTimeout(() => setStatus(''), 3000);\n      return;\n    }\n    if (numAmount <= 0) {\n      setStatus('Error: Enter a positive number');\n      setTimeout(() => setStatus(''), 3000);\n      return;\n    }\n    if (!checkAccountLimits(numAmount)) return;\n    try {\n      const response = await axios.post(`${apiUrl}/api/transaction`, {\n        type: transactionType,\n        amount: numAmount,\n        userId: user._id\n      });\n      if (response.data.success) {\n        user.balance = response.data.newBalance;\n        setStatus(`${transactionType.charAt(0).toUpperCase() + transactionType.slice(1)} successful! New balance is $${response.data.newBalance.toFixed(2)}`);\n      } else {\n        setStatus(`Error: ${response.data.message}`);\n      }\n    } catch (err) {\n      console.error('Error processing transaction:', err);\n      setStatus('Error: Server error');\n      setTimeout(() => setStatus(''), 3000);\n    }\n    setAmount('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container d-flex justify-content-center align-items-center\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header bg-primary text-white text-center\",\n          children: \"Deposit/Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [status && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-info\",\n            role: \"alert\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Current Balance: $\", user.balance.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Account Type: \", user.accountType.charAt(0).toUpperCase() + user.accountType.slice(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"transactionType\",\n              id: \"deposit\",\n              value: \"deposit\",\n              checked: transactionType === 'deposit',\n              onChange: () => setTransactionType('deposit')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"deposit\",\n              children: \"Deposit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"transactionType\",\n              id: \"withdraw\",\n              value: \"withdraw\",\n              checked: transactionType === 'withdraw',\n              onChange: () => setTransactionType('withdraw')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"withdraw\",\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              className: \"form-label\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"amount\",\n              placeholder: \"Enter amount\",\n              value: amount,\n              onChange: e => setAmount(e.currentTarget.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            onClick: handleTransaction,\n            children: transactionType.charAt(0).toUpperCase() + transactionType.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckDeposit, \"D7FHUSE8XUqryjtRUdc3pHrkvwU=\");\n_c = CheckDeposit;\nexport default CheckDeposit;\nvar _c;\n$RefreshReg$(_c, \"CheckDeposit\");","map":{"version":3,"names":["React","useContext","useState","axios","UserContext","jsxDEV","_jsxDEV","apiUrl","process","env","NODE_ENV","CheckDeposit","_s","amount","setAmount","status","setStatus","transactionType","setTransactionType","ctx","user","users","validate","field","label","setTimeout","checkAccountLimits","accountType","balance","handleTransaction","numAmount","parseFloat","isNaN","response","post","type","userId","_id","data","success","newBalance","charAt","toUpperCase","slice","toFixed","message","err","console","error","className","style","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","role","name","id","value","checked","onChange","htmlFor","placeholder","e","currentTarget","onClick","_c","$RefreshReg$"],"sources":["/Users/laviniaguseth/Documents/my-full-stack-app/my-full-stack-app/client/src/checkdeposit.js"],"sourcesContent":["// Import statements should be at the top\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { UserContext } from \"./context\";\n\n// Set the API URL based on environment\nconst apiUrl = process.env.NODE_ENV === 'production'\n  ? 'https://your-app-name.herokuapp.com'\n  : 'http://localhost:5000';\n\n// Client-side CheckDeposit component\nfunction CheckDeposit() {\n  const [amount, setAmount] = useState('');\n  const [status, setStatus] = useState('');\n  const [transactionType, setTransactionType] = useState('deposit');\n  const ctx = useContext(UserContext);\n  const user = ctx.users[0];\n\n  function validate(field, label) {\n    if (!field) {\n      setStatus(`Error: ${label}`);\n      setTimeout(() => setStatus(''), 3000);\n      return false;\n    }\n    return true;\n  }\n\n  function checkAccountLimits(amount) {\n    const accountType = user.accountType; // Assuming accountType is stored in user context\n\n    if (transactionType === 'withdraw') {\n      if (amount > user.balance) {\n        setStatus('Error: Insufficient funds');\n        return false;\n      }\n\n      if (accountType === 'savings' && amount > 1000) {\n        setStatus('Error: Savings account withdrawal limit is $1000');\n        return false;\n      }\n\n      if (accountType === 'business' && amount > 5000) {\n        setStatus('Error: Business account withdrawal limit is $5000');\n        return false;\n      }\n    } else if (transactionType === 'deposit') {\n      if (accountType === 'savings' && amount < 100) {\n        setStatus('Error: Minimum deposit for savings account is $100');\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async function handleTransaction() {\n    if (!validate(amount, 'amount')) return;\n\n    const numAmount = parseFloat(amount);\n    if (isNaN(numAmount)) {\n      setStatus('Error: Enter a valid number');\n      setTimeout(() => setStatus(''), 3000);\n      return;\n    }\n\n    if (numAmount <= 0) {\n      setStatus('Error: Enter a positive number');\n      setTimeout(() => setStatus(''), 3000);\n      return;\n    }\n\n    if (!checkAccountLimits(numAmount)) return;\n\n    try {\n      const response = await axios.post(`${apiUrl}/api/transaction`, {\n        type: transactionType,\n        amount: numAmount,\n        userId: user._id,\n      });\n\n      if (response.data.success) {\n        user.balance = response.data.newBalance;\n        setStatus(`${transactionType.charAt(0).toUpperCase() + transactionType.slice(1)} successful! New balance is $${response.data.newBalance.toFixed(2)}`);\n      } else {\n        setStatus(`Error: ${response.data.message}`);\n      }\n    } catch (err) {\n      console.error('Error processing transaction:', err);\n      setStatus('Error: Server error');\n      setTimeout(() => setStatus(''), 3000);\n    }\n\n    setAmount('');\n  }\n\n  return (\n    <div className=\"container d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\n      <div className=\"col-md-6\">\n        <div className=\"card\">\n          <div className=\"card-header bg-primary text-white text-center\">\n            Deposit/Withdraw\n          </div>\n          <div className=\"card-body\">\n            {status && (\n              <div className=\"alert alert-info\" role=\"alert\">\n                {status}\n              </div>\n            )}\n            <h5>Current Balance: ${user.balance.toFixed(2)}</h5>\n            <h6>Account Type: {user.accountType.charAt(0).toUpperCase() + user.accountType.slice(1)}</h6>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"transactionType\"\n                id=\"deposit\"\n                value=\"deposit\"\n                checked={transactionType === 'deposit'}\n                onChange={() => setTransactionType('deposit')}\n              />\n              <label className=\"form-check-label\" htmlFor=\"deposit\">\n                Deposit\n              </label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"transactionType\"\n                id=\"withdraw\"\n                value=\"withdraw\"\n                checked={transactionType === 'withdraw'}\n                onChange={() => setTransactionType('withdraw')}\n              />\n              <label className=\"form-check-label\" htmlFor=\"withdraw\">\n                Withdraw\n              </label>\n            </div>\n            <br /><br />\n            <div className=\"mb-3\">\n              <label htmlFor=\"amount\" className=\"form-label\">Amount</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"amount\"\n                placeholder=\"Enter amount\"\n                value={amount}\n                onChange={e => setAmount(e.currentTarget.value)}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary w-100\" onClick={handleTransaction}>\n              {transactionType.charAt(0).toUpperCase() + transactionType.slice(1)}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CheckDeposit;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,WAAW;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAChD,qCAAqC,GACrC,uBAAuB;;AAE3B;AACA,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;EACjE,MAAMiB,GAAG,GAAGlB,UAAU,CAACG,WAAW,CAAC;EACnC,MAAMgB,IAAI,GAAGD,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC;EAEzB,SAASC,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAE;IAC9B,IAAI,CAACD,KAAK,EAAE;MACVP,SAAS,CAAC,UAAUQ,KAAK,EAAE,CAAC;MAC5BC,UAAU,CAAC,MAAMT,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MACrC,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;EAEA,SAASU,kBAAkBA,CAACb,MAAM,EAAE;IAClC,MAAMc,WAAW,GAAGP,IAAI,CAACO,WAAW,CAAC,CAAC;;IAEtC,IAAIV,eAAe,KAAK,UAAU,EAAE;MAClC,IAAIJ,MAAM,GAAGO,IAAI,CAACQ,OAAO,EAAE;QACzBZ,SAAS,CAAC,2BAA2B,CAAC;QACtC,OAAO,KAAK;MACd;MAEA,IAAIW,WAAW,KAAK,SAAS,IAAId,MAAM,GAAG,IAAI,EAAE;QAC9CG,SAAS,CAAC,kDAAkD,CAAC;QAC7D,OAAO,KAAK;MACd;MAEA,IAAIW,WAAW,KAAK,UAAU,IAAId,MAAM,GAAG,IAAI,EAAE;QAC/CG,SAAS,CAAC,mDAAmD,CAAC;QAC9D,OAAO,KAAK;MACd;IACF,CAAC,MAAM,IAAIC,eAAe,KAAK,SAAS,EAAE;MACxC,IAAIU,WAAW,KAAK,SAAS,IAAId,MAAM,GAAG,GAAG,EAAE;QAC7CG,SAAS,CAAC,oDAAoD,CAAC;QAC/D,OAAO,KAAK;MACd;IACF;IAEA,OAAO,IAAI;EACb;EAEA,eAAea,iBAAiBA,CAAA,EAAG;IACjC,IAAI,CAACP,QAAQ,CAACT,MAAM,EAAE,QAAQ,CAAC,EAAE;IAEjC,MAAMiB,SAAS,GAAGC,UAAU,CAAClB,MAAM,CAAC;IACpC,IAAImB,KAAK,CAACF,SAAS,CAAC,EAAE;MACpBd,SAAS,CAAC,6BAA6B,CAAC;MACxCS,UAAU,CAAC,MAAMT,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MACrC;IACF;IAEA,IAAIc,SAAS,IAAI,CAAC,EAAE;MAClBd,SAAS,CAAC,gCAAgC,CAAC;MAC3CS,UAAU,CAAC,MAAMT,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MACrC;IACF;IAEA,IAAI,CAACU,kBAAkB,CAACI,SAAS,CAAC,EAAE;IAEpC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,GAAG3B,MAAM,kBAAkB,EAAE;QAC7D4B,IAAI,EAAElB,eAAe;QACrBJ,MAAM,EAAEiB,SAAS;QACjBM,MAAM,EAAEhB,IAAI,CAACiB;MACf,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,IAAI,CAACC,OAAO,EAAE;QACzBnB,IAAI,CAACQ,OAAO,GAAGK,QAAQ,CAACK,IAAI,CAACE,UAAU;QACvCxB,SAAS,CAAC,GAAGC,eAAe,CAACwB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGzB,eAAe,CAAC0B,KAAK,CAAC,CAAC,CAAC,gCAAgCV,QAAQ,CAACK,IAAI,CAACE,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;MACvJ,CAAC,MAAM;QACL5B,SAAS,CAAC,UAAUiB,QAAQ,CAACK,IAAI,CAACO,OAAO,EAAE,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;MACnD9B,SAAS,CAAC,qBAAqB,CAAC;MAChCS,UAAU,CAAC,MAAMT,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACvC;IAEAF,SAAS,CAAC,EAAE,CAAC;EACf;EAEA,oBACER,OAAA;IAAK2C,SAAS,EAAC,4DAA4D;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,eACxG9C,OAAA;MAAK2C,SAAS,EAAC,UAAU;MAAAG,QAAA,eACvB9C,OAAA;QAAK2C,SAAS,EAAC,MAAM;QAAAG,QAAA,gBACnB9C,OAAA;UAAK2C,SAAS,EAAC,+CAA+C;UAAAG,QAAA,EAAC;QAE/D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNlD,OAAA;UAAK2C,SAAS,EAAC,WAAW;UAAAG,QAAA,GACvBrC,MAAM,iBACLT,OAAA;YAAK2C,SAAS,EAAC,kBAAkB;YAACQ,IAAI,EAAC,OAAO;YAAAL,QAAA,EAC3CrC;UAAM;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CACN,eACDlD,OAAA;YAAA8C,QAAA,GAAI,oBAAkB,EAAChC,IAAI,CAACQ,OAAO,CAACgB,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpDlD,OAAA;YAAA8C,QAAA,GAAI,gBAAc,EAAChC,IAAI,CAACO,WAAW,CAACc,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGtB,IAAI,CAACO,WAAW,CAACgB,KAAK,CAAC,CAAC,CAAC;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7FlD,OAAA;YAAK2C,SAAS,EAAC,8BAA8B;YAAAG,QAAA,gBAC3C9C,OAAA;cACE2C,SAAS,EAAC,kBAAkB;cAC5Bd,IAAI,EAAC,OAAO;cACZuB,IAAI,EAAC,iBAAiB;cACtBC,EAAE,EAAC,SAAS;cACZC,KAAK,EAAC,SAAS;cACfC,OAAO,EAAE5C,eAAe,KAAK,SAAU;cACvC6C,QAAQ,EAAEA,CAAA,KAAM5C,kBAAkB,CAAC,SAAS;YAAE;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACFlD,OAAA;cAAO2C,SAAS,EAAC,kBAAkB;cAACc,OAAO,EAAC,SAAS;cAAAX,QAAA,EAAC;YAEtD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNlD,OAAA;YAAK2C,SAAS,EAAC,8BAA8B;YAAAG,QAAA,gBAC3C9C,OAAA;cACE2C,SAAS,EAAC,kBAAkB;cAC5Bd,IAAI,EAAC,OAAO;cACZuB,IAAI,EAAC,iBAAiB;cACtBC,EAAE,EAAC,UAAU;cACbC,KAAK,EAAC,UAAU;cAChBC,OAAO,EAAE5C,eAAe,KAAK,UAAW;cACxC6C,QAAQ,EAAEA,CAAA,KAAM5C,kBAAkB,CAAC,UAAU;YAAE;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eACFlD,OAAA;cAAO2C,SAAS,EAAC,kBAAkB;cAACc,OAAO,EAAC,UAAU;cAAAX,QAAA,EAAC;YAEvD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNlD,OAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAAAlD,OAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACZlD,OAAA;YAAK2C,SAAS,EAAC,MAAM;YAAAG,QAAA,gBACnB9C,OAAA;cAAOyD,OAAO,EAAC,QAAQ;cAACd,SAAS,EAAC,YAAY;cAAAG,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7DlD,OAAA;cACE6B,IAAI,EAAC,QAAQ;cACbc,SAAS,EAAC,cAAc;cACxBU,EAAE,EAAC,QAAQ;cACXK,WAAW,EAAC,cAAc;cAC1BJ,KAAK,EAAE/C,MAAO;cACdiD,QAAQ,EAAEG,CAAC,IAAInD,SAAS,CAACmD,CAAC,CAACC,aAAa,CAACN,KAAK;YAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNlD,OAAA;YAAQ6B,IAAI,EAAC,QAAQ;YAACc,SAAS,EAAC,uBAAuB;YAACkB,OAAO,EAAEtC,iBAAkB;YAAAuB,QAAA,EAChFnC,eAAe,CAACwB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGzB,eAAe,CAAC0B,KAAK,CAAC,CAAC;UAAC;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5C,EAAA,CAnJQD,YAAY;AAAAyD,EAAA,GAAZzD,YAAY;AAqJrB,eAAeA,YAAY;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}